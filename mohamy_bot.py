import os
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters

# ===== ููุญุงุช ุงูููุงุชูุญ =====
def main_keyboard():
    return ReplyKeyboardMarkup([
        ["ุงุณุชุดุงุฑุฉ ูุงููููุฉ ุชููุงุฆูุฉ", "ุฎุฏูุงุชูุง ุงููุฏููุนุฉ"],
        ["ุชูุงุตู ูุน ูุทูุฑู ุงูุจูุช", "ุชุนุฑู ุนูู ุญูููู (ูุฌุงูู)"],
        ["ุชุตูุญ ุงูููุงููู ุงูุนุฑุงููุฉ", "ุนู ูุญุงูู . ููู"]
    ], resize_keyboard=True)

def legal_advice_keyboard():
    return ReplyKeyboardMarkup([
        ["ูุถุงูุง ููุชุณุจู ุงูุฌูุด", "ูุถุงูุง ููุธูู ุงูุฏููุฉ"],
        ["ูุถุงูุง ุฌูุงุฆูุฉ", "ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ"]
    ], resize_keyboard=True)

def paid_services_keyboard():
    return ReplyKeyboardMarkup([
        ["ุตูุงุบุฉ ุงูุนููุฏ ุงูุดุฎุตูุฉ ูุงูุญููููุฉ", "ุชูุธูู ูุถุงูุง"],
        ["ุงุณุชุดุงุฑุฉ ุฎุงุตุฉ", "ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ"]
    ], resize_keyboard=True)

def payment_confirmation_keyboard():
    return ReplyKeyboardMarkup([
        ["ูุนูุ ุงุฑูุฏ ุงููุชุงุจุนุฉ ููุฏูุน", "ูุงุ ุดูุฑุงู"]
    ], resize_keyboard=True)

# ===== ูุนุงูุฌุฉ ุงูุฃูุงูุฑ =====
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_msg = """๐ **ูุฑุญุจูุง ุจู ูู ุจูุช ูุญุงูู.ููู** โ๏ธ

ูุญู ูุญุชุฑู ุฎุตูุตูุชู ุชูุงููุง. ูุง ุญุงุฌุฉ ูุฐูุฑ ุฃู ูุนูููุงุช ุดุฎุตูุฉ ุฃู ุจูุงูุงุช ุญููููุฉ. 
ููุง ุฃู ุงูุฃุณุฆูุฉ ูุง ุชูุฎุฒู ููุง ูุชู ุชุชุจุน ุงููุณุชุฎุฏููู.

ุงุฎุชุฑ ูู ุงููุงุฆูุฉ ุฃุฏูุงู ุงูุฎุฏูุฉ ุงูุชู ุชูุงุณุจู:"""
    await update.message.reply_text(
        welcome_msg,
        reply_markup=main_keyboard(),
        parse_mode="Markdown"
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "ุงุณุชุดุงุฑุฉ ูุงููููุฉ ุชููุงุฆูุฉ":
        await update.message.reply_text(
            "๐งพ ุณุนุฑ ุงูุงุณุชุดุงุฑุฉ ุงูุชููุงุฆูุฉ ูู 5000 ุฏููุงุฑ ุนุฑุงูู.\nุงุฎุชุฑ ููุน ุงููุถูุฉ:",
            reply_markup=legal_advice_keyboard()
        )

    elif text == "ุฎุฏูุงุชูุง ุงููุฏููุนุฉ":
        await update.message.reply_text(
            "โ๏ธ **ุงูุฎุฏูุงุช ุงููููุฒุฉ ุงููุชุงุญุฉ**:\n\n"
            "1. ุตูุงุบุฉ ุงูุนููุฏ:\n"
            "   - ุงูุญููููุฉ: 100,000 ุฏ.ุน\n"
            "   - ุงูุดุฎุตูุฉ: 250,000 ุฏ.ุน\n"
            "2. ุชูุธูู ูุถุงูุง (ุญุณุจ ููุน ุงููุถูุฉ)\n"
            "3. ุงุณุชุดุงุฑุฉ ุฎุงุตุฉ: 50,000 ุฏ.ุน\n\n"
            "๐ *ุงูุฃุณุนุงุฑ ูุงุจูุฉ ููุชุบููุฑ ูุณูุชู ุฅุดุนุงุฑู ุจุฐูู ูุจู ุจุฏุก ุงูุงุณุชุดุงุฑุฉ.*\n\n"
            "ุงุฎุชุฑ ุงูุฎุฏูุฉ ุงูุชู ุชุฑูุฏูุง:",
            reply_markup=paid_services_keyboard(),
            parse_mode="Markdown"
        )

    elif text == "ุตูุงุบุฉ ุงูุนููุฏ ุงูุดุฎุตูุฉ ูุงูุญููููุฉ":
        context.user_data.update({
            'service': "ุตูุงุบุฉ ุงูุนููุฏ",
            'price': 100000  # ุงูุชุฑุงุถููุง ููุญููููุฉ
        })
        await update.message.reply_text(
            "๐ **ุฎุฏูุฉ ุตูุงุบุฉ ุงูุนููุฏ**\n\n"
            "ุงูุณุนุฑ:\nุงูุญููููุฉ: 100,000 ุฏ.ุน\nุงูุดุฎุตูุฉ: 250,000 ุฏ.ุน\n\n"
            "ูู ุชุฑูุฏ ุงููุชุงุจุนุฉ ููุฏูุนุ",
            reply_markup=payment_confirmation_keyboard(),
            parse_mode="Markdown"
        )

    elif text == "ุงุณุชุดุงุฑุฉ ุฎุงุตุฉ":
        context.user_data.update({
            'service': "ุงุณุชุดุงุฑุฉ ุฎุงุตุฉ",
            'price': 50000
        })
        await update.message.reply_text(
            "๐ผ **ุงุณุชุดุงุฑุฉ ุฎุงุตุฉ**\n\n"
            "ุงูุณุนุฑ: 50,000 ุฏ.ุน\nูู ุชุฑูุฏ ุงููุชุงุจุนุฉ ููุฏูุนุ",
            reply_markup=payment_confirmation_keyboard(),
            parse_mode="Markdown"
        )

    elif text == "ูุนูุ ุงุฑูุฏ ุงููุชุงุจุนุฉ ููุฏูุน":
        service = context.user_data.get('service', 'ุฎุฏูุฉ ุบูุฑ ูุญุฏุฏุฉ')
        price = context.user_data.get('price', 0)
        payment_link = f"https://payment.mohamy.com/?service={service.replace(' ', '_')}&amount={price}"
        await update.message.reply_text(
            f"๐ **ุชูุงุตูู ุงูุฏูุน**\n\n"
            f"ุงูุฎุฏูุฉ: {service}\n"
            f"ุงููุจูุบ: {price} ุฏ.ุน\n\n"
            f"ููุงุณุชูุฑุงุฑุ ูุฑุฌู ุงูุฏูุน ุนุจุฑ ุงูุฑุงุจุท ุงูุขูู:\n{payment_link}",
            reply_markup=ReplyKeyboardRemove(),
            parse_mode="Markdown"
        )

    elif text in ["ูุงุ ุดูุฑุงู", "ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ"]:
        await update.message.reply_text(
            "ุชู ุงูุนูุฏุฉ ูููุงุฆูุฉ ุงูุฑุฆูุณูุฉ",
            reply_markup=main_keyboard()
        )

    elif text == "ุชูุงุตู ูุน ูุทูุฑู ุงูุจูุช":
        await update.message.reply_text(
            "๐จโ๐ป ููุชูุงุตู ูุน ูุทูุฑู ุงูุจูุช:\n\n"
            "ูููุณุงููุฉ ุฃู ุฅุฑุณุงู ุงูููุงุญุธุงุช ุนูู ุงูุจูุชุ ูุง ุชุชุฑุฏุฏ ูู ูุฑุงุณูุชูุง ุนูู:\n"
            "ูุงุชุณุงุจ: +9647775535047\n"
            "ุฃููุงุช ุงูุฑุฏ: 6ู - 10ู"
        )

    elif text == "ุชุนุฑู ุนูู ุญูููู (ูุฌุงูู)":
        await update.message.reply_text("๐ ูุฐุง ุงููุณู ููุฏ ุงูุชุทููุฑ. ุณูุชู ูุดุฑ ูุนูููุงุช ูุงููููุฉ ูููุฏุฉ ูุฑูุจูุง.")

    elif text == "ุชุตูุญ ุงูููุงููู ุงูุนุฑุงููุฉ":
        await update.message.reply_text("๐ ูุฐู ุงูุฎุฏูุฉ ุณุชุชูุญ ูู ูุฑูุจูุง ุงุณุชุนุฑุงุถ ูุตูุต ุงูููุงููู ุงูุนุฑุงููุฉ.")

    elif text == "ุนู ูุญุงูู . ููู":
        await update.message.reply_text(
            "๐ค ุชู ุชุฃุณูุณ ุจูุช ูุญุงูู.ููู ุจูุฏู ุชุณููู ูุตูู ุงูุฃูุฑุงุฏ ุฅูู ุงููุนูููุงุช ุงููุงููููุฉ ูุงูุฎุฏูุงุช ุงูุงุณุชุดุงุฑูุฉ ุจุฃุณููุจ ุนุตุฑู ูุณููุ ูุจุนูุฏูุง ุนู ุงูุชุนููุฏ ุงูุชูููุฏู ูู ุงููุฌุงู ุงููุงูููู."
        )

async def main():
    BOT_TOKEN = os.getenv("BOT_TOKEN")  # ุงูุญุตูู ุนูู ุงูุชููู ูู ูุชุบูุฑ ุงูุจูุฆุฉ
    if not BOT_TOKEN:
        print("Error: BOT_TOKEN environment variable not set.")
        return

    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))

    await app.run_polling()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
